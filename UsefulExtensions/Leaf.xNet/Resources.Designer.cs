//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Leaf.xNet {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UsefulExtensions.Leaf.xNet.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Thread can not read or seek.
        /// </summary>
        internal static string ArgumentException_CanNotReadOrSeek {
            get {
                return ResourceManager.GetString("ArgumentException_CanNotReadOrSeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value has not been empty string.
        /// </summary>
        internal static string ArgumentException_EmptyString {
            get {
                return ResourceManager.GetString("ArgumentException_EmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value of &apos;{0}&apos; set not available header.
        /// </summary>
        internal static string ArgumentException_HttpRequest_SetNotAvailableHeader {
            get {
                return ResourceManager.GetString("ArgumentException_HttpRequest_SetNotAvailableHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Begin Index range more end index.
        /// </summary>
        internal static string ArgumentException_MultiThreading_BegIndexRangeMoreEndIndex {
            get {
                return ResourceManager.GetString("ArgumentException_MultiThreading_BegIndexRangeMoreEndIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Acceptable use only the absolute URI..
        /// </summary>
        internal static string ArgumentException_OnlyAbsoluteUri {
            get {
                return ResourceManager.GetString("ArgumentException_OnlyAbsoluteUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The path is an empty string, contains only white space, or contains invalid characters..
        /// </summary>
        internal static string ArgumentException_WrongPath {
            get {
                return ResourceManager.GetString("ArgumentException_WrongPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The value can not be more than {0}..
        /// </summary>
        internal static string ArgumentOutOfRangeException_CanNotBeGreater {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_CanNotBeGreater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The value can not be less {0}..
        /// </summary>
        internal static string ArgumentOutOfRangeException_CanNotBeLess {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_CanNotBeLess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The value can not be less than {0} or {1} longer..
        /// </summary>
        internal static string ArgumentOutOfRangeException_CanNotBeLessOrGreater {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_CanNotBeLessOrGreater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The starting position can not be more than the length of the string..
        /// </summary>
        internal static string ArgumentOutOfRangeException_StringHelper_MoreLengthString {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_StringHelper_MoreLengthString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на String length must not be more than {0} characters..
        /// </summary>
        internal static string ArgumentOutOfRangeException_StringLengthCanNotBeMore {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_StringLengthCanNotBeMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cookies file &apos;${0}&apos; already exists..
        /// </summary>
        internal static string CookieStorage_SaveToFile_FileAlreadyExists {
            get {
                return ResourceManager.GetString("CookieStorage_SaveToFile_FileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на he path points to a nonexistent directory {0}..
        /// </summary>
        internal static string DirectoryNotFoundException_DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFoundException_DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid port specified..
        /// </summary>
        internal static string FormatException_ProxyClient_WrongPort {
            get {
                return ResourceManager.GetString("FormatException_ProxyClient_WrongPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The error on the client side. Status code: {0}.
        /// </summary>
        internal static string HttpException_ClientError {
            get {
                return ResourceManager.GetString("HttpException_ClientError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It turned out wait for a connection to the HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_ConnectTimeout {
            get {
                return ResourceManager.GetString("HttpException_ConnectTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error when handling HTTP protocol..
        /// </summary>
        internal static string HttpException_Default {
            get {
                return ResourceManager.GetString("HttpException_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to connect to the HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedConnect {
            get {
                return ResourceManager.GetString("HttpException_FailedConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to get the host IP-address &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedGetHostAddresses {
            get {
                return ResourceManager.GetString("HttpException_FailedGetHostAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could not receive the message body of the response HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedReceiveMessageBody {
            get {
                return ResourceManager.GetString("HttpException_FailedReceiveMessageBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to receive the response from the HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedReceiveResponse {
            get {
                return ResourceManager.GetString("HttpException_FailedReceiveResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to send HTTP-request to the server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedSendRequest {
            get {
                return ResourceManager.GetString("HttpException_FailedSendRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to establish SSL-connection with HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedSslConnect {
            get {
                return ResourceManager.GetString("HttpException_FailedSslConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Have exceeded the maximum number of consecutive redirects..
        /// </summary>
        internal static string HttpException_LimitRedirections {
            get {
                return ResourceManager.GetString("HttpException_LimitRedirections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received empty response from the HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_ReceivedEmptyResponse {
            get {
                return ResourceManager.GetString("HttpException_ReceivedEmptyResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received an invalid response from the HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_ReceivedWrongResponse {
            get {
                return ResourceManager.GetString("HttpException_ReceivedWrongResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The error on the server side. Status code: {0}.
        /// </summary>
        internal static string HttpException_SeverError {
            get {
                return ResourceManager.GetString("HttpException_SeverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It turned out the wait time data from the HTTP-server &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_WaitDataTimeout {
            get {
                return ResourceManager.GetString("HttpException_WaitDataTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received invalid data block size when using Chunked: {0}.
        /// </summary>
        internal static string HttpException_WrongChunkedBlockLength {
            get {
                return ResourceManager.GetString("HttpException_WrongChunkedBlockLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received invalid cookies &apos;{0}&apos; from the HTTP-server &apos;{1}&apos;..
        /// </summary>
        internal static string HttpException_WrongCookie {
            get {
                return ResourceManager.GetString("HttpException_WrongCookie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received invalid header &quot;{0} &apos;from the HTTP-server&apos; {1} &apos;..
        /// </summary>
        internal static string HttpException_WrongHeader {
            get {
                return ResourceManager.GetString("HttpException_WrongHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to perform the method, because an error occurred while receiving a response..
        /// </summary>
        internal static string InvalidOperationException_HttpResponse_HasError {
            get {
                return ResourceManager.GetString("InvalidOperationException_HttpResponse_HasError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received an unsupported encoding format: {0}.
        /// </summary>
        internal static string InvalidOperationException_NotSupportedEncodingFormat {
            get {
                return ResourceManager.GetString("InvalidOperationException_NotSupportedEncodingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The host may be uncertain or have zero length..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongHost {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The password can not be more than 255 characters..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongPassword {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The port can not be less than 1 or greater than 65535..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongPort {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User name can not be more than 255 characters..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongUsername {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while working with the network..
        /// </summary>
        internal static string NetException_Default {
            get {
                return ResourceManager.GetString("NetException_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} The proxy server &apos;{1}&apos;..
        /// </summary>
        internal static string ProxyException_CommandError {
            get {
                return ResourceManager.GetString("ProxyException_CommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It turned out the wait time to connect to the proxy server &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_ConnectTimeout {
            get {
                return ResourceManager.GetString("ProxyException_ConnectTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while working with the proxy..
        /// </summary>
        internal static string ProxyException_Default {
            get {
                return ResourceManager.GetString("ProxyException_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred while working with the proxy server &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_Error {
            get {
                return ResourceManager.GetString("ProxyException_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to connect to the proxy server &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_FailedConnect {
            get {
                return ResourceManager.GetString("ProxyException_FailedConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to get the host IP-address &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_FailedGetHostAddresses {
            get {
                return ResourceManager.GetString("ProxyException_FailedGetHostAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The host &apos;{0}&apos; type &apos;{1}&apos; does not support the type Address. The following types: InterNetwork and InterNetworkV6. The proxy server &apos;{2}&apos;..
        /// </summary>
        internal static string ProxyException_NotSupportedAddressType {
            get {
                return ResourceManager.GetString("ProxyException_NotSupportedAddressType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received empty response from the proxy server &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_ReceivedEmptyResponse {
            get {
                return ResourceManager.GetString("ProxyException_ReceivedEmptyResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received an invalid response from the proxy server &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_ReceivedWrongResponse {
            get {
                return ResourceManager.GetString("ProxyException_ReceivedWrongResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received invalid status code &apos;{0}&apos; on &apos;{1}&apos; proxy..
        /// </summary>
        internal static string ProxyException_ReceivedWrongStatusCode {
            get {
                return ResourceManager.GetString("ProxyException_ReceivedWrongStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to authenticate with the proxy server &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_Socks5_FailedAuthOn {
            get {
                return ResourceManager.GetString("ProxyException_Socks5_FailedAuthOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It turned out the wait time data from the proxy server &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_WaitDataTimeout {
            get {
                return ResourceManager.GetString("ProxyException_WaitDataTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown error..
        /// </summary>
        internal static string Socks_UnknownError {
            get {
                return ResourceManager.GetString("Socks_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The request failed, because things are not running idents (or not available from the server)..
        /// </summary>
        internal static string Socks4_CommandReplyRequestRejectedCannotConnectToIdentd {
            get {
                return ResourceManager.GetString("Socks4_CommandReplyRequestRejectedCannotConnectToIdentd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The request failed because client&apos;s idents could not confirm the user ID in the query..
        /// </summary>
        internal static string Socks4_CommandReplyRequestRejectedDifferentIdentd {
            get {
                return ResourceManager.GetString("Socks4_CommandReplyRequestRejectedDifferentIdentd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Query rejected or erroneous..
        /// </summary>
        internal static string Socks4_CommandReplyRequestRejectedOrFailed {
            get {
                return ResourceManager.GetString("Socks4_CommandReplyRequestRejectedOrFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The proposed authentication methods are supported..
        /// </summary>
        internal static string Socks5_AuthMethodReplyNoAcceptableMethods {
            get {
                return ResourceManager.GetString("Socks5_AuthMethodReplyNoAcceptableMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Address type not supported..
        /// </summary>
        internal static string Socks5_CommandReplyAddressTypeNotSupported {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyAddressTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The command is not supported or protocol error..
        /// </summary>
        internal static string Socks5_CommandReplyCommandNotSupported {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyCommandNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting a set of rules is prohibited..
        /// </summary>
        internal static string Socks5_CommandReplyConnectionNotAllowedByRuleset {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyConnectionNotAllowedByRuleset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection refused..
        /// </summary>
        internal static string Socks5_CommandReplyConnectionRefused {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyConnectionRefused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error SOCKS-server..
        /// </summary>
        internal static string Socks5_CommandReplyGeneralSocksServerFailure {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyGeneralSocksServerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Host unreachable..
        /// </summary>
        internal static string Socks5_CommandReplyHostUnreachable {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyHostUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The network is not available..
        /// </summary>
        internal static string Socks5_CommandReplyNetworkUnreachable {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyNetworkUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Expired TTL..
        /// </summary>
        internal static string Socks5_CommandReplyTTLExpired {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyTTLExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid start index for substrings..
        /// </summary>
        internal static string StringExtensions_Substrings_Invalid_Index {
            get {
                return ResourceManager.GetString("StringExtensions_Substrings_Invalid_Index", resourceCulture);
            }
        }
    }
}
